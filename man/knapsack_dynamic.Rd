% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/knapsack_dynamic.R
\name{knapsack_dynamic}
\alias{knapsack_dynamic}
\title{Dynamic programming Solution for Knapsack Problem}
\usage{
knapsack_dynamic(x,W)
}
\arguments{
\item{x}{is a data frame with two columns w(weight) and v(value)}

\item{W}{is maximum weight(capacity) of knapsack}
}
\value{
\code{list} List of object containing \code{value} giving maximum value of Knapsack out of dataframe and \code{elements} giving weight of 
selected elements from data frame x
}
\description{
The knapsack problem is a combinatorial optimization problem.
A dataframe is given having two parameters, weight and value. 
Each value has its own weight and we have to pack items with maximum value and within weight capacity
This function should return the same results as the brute force algorithm,
but unlike the brute force it should scale much better since the algorithm will run in O<Wn>.
}
\examples{
  RNGversion(min(as.character(getRversion()),"3.6.1"))
  set.seed(42,kind="Mersenne-Twister",normal.kind = "Inversion")
  n <- 2000
  knapsack_objects <-data.frame(w=sample(1:4000, size = n, replace = TRUE),
                             v=runif(n = n, 0, 10000))
  l<-knapsack_dynamic(knapsack_objects[1:12,],3500)
  
}
\seealso{
\url{https://en.wikipedia.org/wiki/Knapsack_problem#0.2F1_knapsack_problem}
}
